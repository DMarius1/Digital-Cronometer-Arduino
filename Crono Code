#include <LiquidCrystal.h>

// asociere pini Arduiono LCD

const byte RS = 11, EN = 12;
const byte DB4 = 4, DB5 = 5, DB6 = 6, DB7 = 7;
LiquidCrystal lcd(RS, EN, DB4, DB5, DB6, DB7);


int contor = 0;

int secunde = 0;
int minute = 0;
int ore = 0;
bool go = false;

void setup()
{
  //def nr. linii si coloane 
  lcd.begin(16,2);
  //afiare mesaj 
  lcd.print("Cronometru: ");
  
  //setare pini butoane -> iesire
  
  DDRD |= (1 << 2) | (1 << 3);
  
  //configurare intreruperi externe
  EICRA |=(1 << ISC11) | (1 << ISC10 ) | (1 << ISC01 ) | (1 << ISC00 );
  EIMSK |=(1 << INT1) | (1 << INT0);
  EIFR |=(0 << INTF1) | (0 << INTF0);
  PCICR |=(0 << PCIE2) | (0 << PCIE1) | (0 << PCIE0);
  
  //configurare timer pt intrerupere
  //la 4 ms
  //seteaza mod de functionare CTC 
  
  TCCR0A = (1 << WGM01 ) | (0 << WGM00);
  
  //configurare valoare de TOP 
  OCR0A = 0xF9;
  
  //activeaza intrerupere aferenta modului de functionare 
  // de tip comparare
  
  TIMSK0 |= (1 << OCIE0A);
  
  //configurare prescalar 256
  
  TCCR0B = (1 << CS02) | (0 << CS01) | (0 << CS00);
  
  //activare intreruperi globale
  SREG |= (1 << SREG_I);
}

void loop()
{
  lcd.setCursor(0,1);
  if(go)
  {
  if(ore<10)
  {
  	lcd.print(0);
	lcd.setCursor(1,1);
  }
  lcd.print(ore);
  lcd.setCursor(2,1);
  lcd.print(":");
  lcd.setCursor(3,1);
  if(minute<10)
  {
    lcd.print(0);
  	lcd.setCursor(4,1);
  }
  lcd.print(minute);
  lcd.setCursor(5,1);
  lcd.print( ":");
  lcd.setCursor(6,1) ;
  if(secunde<10)
  {
  	 lcd.print(0);
     lcd.setCursor(7,1);
  }
    lcd.print(secunde);
  }
}

//functie pt incremetarea orelor

inline void incrementOre()
{
  ++ore;
  if(ore>=24)
  {
    ore %=24;
  }
}

//functie pt incremetarea minutelor

inline void incrementMinute()
{
  ++minute;
  if(minute >60)
  {
    incrementOre();
    minute %= 60;
  }
}

//rutina de intrupere pentru contorizarea secundelor
ISR(TIMER0_COMPA_vect)
{
  //dezactivare intreruperi globale
  SREG &= ~(1 << SREG_I);
  
  //au mai trecut 4ms, ++contor
  ++contor;
  
  //daca contorul a ajuns la 250, adica 1s
  if (contor >=250)
  {
    //incrementam sec si resetam contor
    ++secunde;
    contor = 0;
    
    if (secunde >=60)
    {
      //daca avem 60 sec, incrementam min si secunde=0
      incrementMinute();
      secunde %=60;
    }
  }
  
  //activare intreruperi globale
  SREG |= (1 << SREG_I);
}

//tratare intrerupere buton 2
ISR(INT0_vect)
{
  SREG&=~(1<<SREG_I);
  if(go)
  { go = false;}
  else 
  {go = true;}
  SREG|=(1<<SREG_I);
}

//tratare intrerupere buton 3
ISR(INT1_vect)
{
  SREG&=~(1<<SREG_I);
  contor = 0;
  secunde = 0;
  minute = 0;
  ore = 0;
  SREG|=(1<<SREG_I);
}
